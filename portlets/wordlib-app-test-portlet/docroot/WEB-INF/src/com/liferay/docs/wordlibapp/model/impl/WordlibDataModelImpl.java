/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.liferay.docs.wordlibapp.model.impl;

import com.liferay.docs.wordlibapp.model.WordlibData;
import com.liferay.docs.wordlibapp.model.WordlibDataModel;
import com.liferay.docs.wordlibapp.model.WordlibDataSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the WordlibData service. Represents a row in the &quot;WLA_WordlibData&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.liferay.docs.wordlibapp.model.WordlibDataModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link WordlibDataImpl}.
 * </p>
 *
 * @author mike
 * @see WordlibDataImpl
 * @see com.liferay.docs.wordlibapp.model.WordlibData
 * @see com.liferay.docs.wordlibapp.model.WordlibDataModel
 * @generated
 */
@JSON(strict = true)
public class WordlibDataModelImpl extends BaseModelImpl<WordlibData>
	implements WordlibDataModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a wordlib data model instance should use the {@link com.liferay.docs.wordlibapp.model.WordlibData} interface instead.
	 */
	public static final String TABLE_NAME = "WLA_WordlibData";
	public static final Object[][] TABLE_COLUMNS = {
			{ "wordlibId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "imageId", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "person", Types.VARCHAR },
			{ "place", Types.VARCHAR },
			{ "adjective", Types.VARCHAR },
			{ "animal", Types.VARCHAR },
			{ "celebrity", Types.VARCHAR },
			{ "verb", Types.VARCHAR },
			{ "adverb", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table WLA_WordlibData (wordlibId LONG not null primary key,groupId LONG,userId LONG,companyId LONG,imageId LONG,name VARCHAR(75) null,person VARCHAR(75) null,place VARCHAR(75) null,adjective VARCHAR(75) null,animal VARCHAR(75) null,celebrity VARCHAR(75) null,verb VARCHAR(75) null,adverb VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table WLA_WordlibData";
	public static final String ORDER_BY_JPQL = " ORDER BY wordlibData.wordlibId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY WLA_WordlibData.wordlibId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.docs.wordlibapp.model.WordlibData"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.docs.wordlibapp.model.WordlibData"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.liferay.docs.wordlibapp.model.WordlibData"),
			true);
	public static long WORDLIBID_COLUMN_BITMASK = 1L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static WordlibData toModel(WordlibDataSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		WordlibData model = new WordlibDataImpl();

		model.setWordlibId(soapModel.getWordlibId());
		model.setGroupId(soapModel.getGroupId());
		model.setUserId(soapModel.getUserId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setImageId(soapModel.getImageId());
		model.setName(soapModel.getName());
		model.setPerson(soapModel.getPerson());
		model.setPlace(soapModel.getPlace());
		model.setAdjective(soapModel.getAdjective());
		model.setAnimal(soapModel.getAnimal());
		model.setCelebrity(soapModel.getCelebrity());
		model.setVerb(soapModel.getVerb());
		model.setAdverb(soapModel.getAdverb());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<WordlibData> toModels(WordlibDataSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<WordlibData> models = new ArrayList<WordlibData>(soapModels.length);

		for (WordlibDataSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.liferay.docs.wordlibapp.model.WordlibData"));

	public WordlibDataModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _wordlibId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setWordlibId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _wordlibId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return WordlibData.class;
	}

	@Override
	public String getModelClassName() {
		return WordlibData.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("wordlibId", getWordlibId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("companyId", getCompanyId());
		attributes.put("imageId", getImageId());
		attributes.put("name", getName());
		attributes.put("person", getPerson());
		attributes.put("place", getPlace());
		attributes.put("adjective", getAdjective());
		attributes.put("animal", getAnimal());
		attributes.put("celebrity", getCelebrity());
		attributes.put("verb", getVerb());
		attributes.put("adverb", getAdverb());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long wordlibId = (Long)attributes.get("wordlibId");

		if (wordlibId != null) {
			setWordlibId(wordlibId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long imageId = (Long)attributes.get("imageId");

		if (imageId != null) {
			setImageId(imageId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String person = (String)attributes.get("person");

		if (person != null) {
			setPerson(person);
		}

		String place = (String)attributes.get("place");

		if (place != null) {
			setPlace(place);
		}

		String adjective = (String)attributes.get("adjective");

		if (adjective != null) {
			setAdjective(adjective);
		}

		String animal = (String)attributes.get("animal");

		if (animal != null) {
			setAnimal(animal);
		}

		String celebrity = (String)attributes.get("celebrity");

		if (celebrity != null) {
			setCelebrity(celebrity);
		}

		String verb = (String)attributes.get("verb");

		if (verb != null) {
			setVerb(verb);
		}

		String adverb = (String)attributes.get("adverb");

		if (adverb != null) {
			setAdverb(adverb);
		}
	}

	@JSON
	@Override
	public long getWordlibId() {
		return _wordlibId;
	}

	@Override
	public void setWordlibId(long wordlibId) {
		_columnBitmask |= WORDLIBID_COLUMN_BITMASK;

		if (!_setOriginalWordlibId) {
			_setOriginalWordlibId = true;

			_originalWordlibId = _wordlibId;
		}

		_wordlibId = wordlibId;
	}

	public long getOriginalWordlibId() {
		return _originalWordlibId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getImageId() {
		return _imageId;
	}

	@Override
	public void setImageId(long imageId) {
		_imageId = imageId;
	}

	@JSON
	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@JSON
	@Override
	public String getPerson() {
		if (_person == null) {
			return StringPool.BLANK;
		}
		else {
			return _person;
		}
	}

	@Override
	public void setPerson(String person) {
		_person = person;
	}

	@JSON
	@Override
	public String getPlace() {
		if (_place == null) {
			return StringPool.BLANK;
		}
		else {
			return _place;
		}
	}

	@Override
	public void setPlace(String place) {
		_place = place;
	}

	@JSON
	@Override
	public String getAdjective() {
		if (_adjective == null) {
			return StringPool.BLANK;
		}
		else {
			return _adjective;
		}
	}

	@Override
	public void setAdjective(String adjective) {
		_adjective = adjective;
	}

	@JSON
	@Override
	public String getAnimal() {
		if (_animal == null) {
			return StringPool.BLANK;
		}
		else {
			return _animal;
		}
	}

	@Override
	public void setAnimal(String animal) {
		_animal = animal;
	}

	@JSON
	@Override
	public String getCelebrity() {
		if (_celebrity == null) {
			return StringPool.BLANK;
		}
		else {
			return _celebrity;
		}
	}

	@Override
	public void setCelebrity(String celebrity) {
		_celebrity = celebrity;
	}

	@JSON
	@Override
	public String getVerb() {
		if (_verb == null) {
			return StringPool.BLANK;
		}
		else {
			return _verb;
		}
	}

	@Override
	public void setVerb(String verb) {
		_verb = verb;
	}

	@JSON
	@Override
	public String getAdverb() {
		if (_adverb == null) {
			return StringPool.BLANK;
		}
		else {
			return _adverb;
		}
	}

	@Override
	public void setAdverb(String adverb) {
		_adverb = adverb;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			WordlibData.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public WordlibData toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (WordlibData)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		WordlibDataImpl wordlibDataImpl = new WordlibDataImpl();

		wordlibDataImpl.setWordlibId(getWordlibId());
		wordlibDataImpl.setGroupId(getGroupId());
		wordlibDataImpl.setUserId(getUserId());
		wordlibDataImpl.setCompanyId(getCompanyId());
		wordlibDataImpl.setImageId(getImageId());
		wordlibDataImpl.setName(getName());
		wordlibDataImpl.setPerson(getPerson());
		wordlibDataImpl.setPlace(getPlace());
		wordlibDataImpl.setAdjective(getAdjective());
		wordlibDataImpl.setAnimal(getAnimal());
		wordlibDataImpl.setCelebrity(getCelebrity());
		wordlibDataImpl.setVerb(getVerb());
		wordlibDataImpl.setAdverb(getAdverb());

		wordlibDataImpl.resetOriginalValues();

		return wordlibDataImpl;
	}

	@Override
	public int compareTo(WordlibData wordlibData) {
		long primaryKey = wordlibData.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof WordlibData)) {
			return false;
		}

		WordlibData wordlibData = (WordlibData)obj;

		long primaryKey = wordlibData.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		WordlibDataModelImpl wordlibDataModelImpl = this;

		wordlibDataModelImpl._originalWordlibId = wordlibDataModelImpl._wordlibId;

		wordlibDataModelImpl._setOriginalWordlibId = false;

		wordlibDataModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<WordlibData> toCacheModel() {
		WordlibDataCacheModel wordlibDataCacheModel = new WordlibDataCacheModel();

		wordlibDataCacheModel.wordlibId = getWordlibId();

		wordlibDataCacheModel.groupId = getGroupId();

		wordlibDataCacheModel.userId = getUserId();

		wordlibDataCacheModel.companyId = getCompanyId();

		wordlibDataCacheModel.imageId = getImageId();

		wordlibDataCacheModel.name = getName();

		String name = wordlibDataCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			wordlibDataCacheModel.name = null;
		}

		wordlibDataCacheModel.person = getPerson();

		String person = wordlibDataCacheModel.person;

		if ((person != null) && (person.length() == 0)) {
			wordlibDataCacheModel.person = null;
		}

		wordlibDataCacheModel.place = getPlace();

		String place = wordlibDataCacheModel.place;

		if ((place != null) && (place.length() == 0)) {
			wordlibDataCacheModel.place = null;
		}

		wordlibDataCacheModel.adjective = getAdjective();

		String adjective = wordlibDataCacheModel.adjective;

		if ((adjective != null) && (adjective.length() == 0)) {
			wordlibDataCacheModel.adjective = null;
		}

		wordlibDataCacheModel.animal = getAnimal();

		String animal = wordlibDataCacheModel.animal;

		if ((animal != null) && (animal.length() == 0)) {
			wordlibDataCacheModel.animal = null;
		}

		wordlibDataCacheModel.celebrity = getCelebrity();

		String celebrity = wordlibDataCacheModel.celebrity;

		if ((celebrity != null) && (celebrity.length() == 0)) {
			wordlibDataCacheModel.celebrity = null;
		}

		wordlibDataCacheModel.verb = getVerb();

		String verb = wordlibDataCacheModel.verb;

		if ((verb != null) && (verb.length() == 0)) {
			wordlibDataCacheModel.verb = null;
		}

		wordlibDataCacheModel.adverb = getAdverb();

		String adverb = wordlibDataCacheModel.adverb;

		if ((adverb != null) && (adverb.length() == 0)) {
			wordlibDataCacheModel.adverb = null;
		}

		return wordlibDataCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{wordlibId=");
		sb.append(getWordlibId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", imageId=");
		sb.append(getImageId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", person=");
		sb.append(getPerson());
		sb.append(", place=");
		sb.append(getPlace());
		sb.append(", adjective=");
		sb.append(getAdjective());
		sb.append(", animal=");
		sb.append(getAnimal());
		sb.append(", celebrity=");
		sb.append(getCelebrity());
		sb.append(", verb=");
		sb.append(getVerb());
		sb.append(", adverb=");
		sb.append(getAdverb());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("com.liferay.docs.wordlibapp.model.WordlibData");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>wordlibId</column-name><column-value><![CDATA[");
		sb.append(getWordlibId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>imageId</column-name><column-value><![CDATA[");
		sb.append(getImageId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>person</column-name><column-value><![CDATA[");
		sb.append(getPerson());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>place</column-name><column-value><![CDATA[");
		sb.append(getPlace());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>adjective</column-name><column-value><![CDATA[");
		sb.append(getAdjective());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>animal</column-name><column-value><![CDATA[");
		sb.append(getAnimal());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>celebrity</column-name><column-value><![CDATA[");
		sb.append(getCelebrity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>verb</column-name><column-value><![CDATA[");
		sb.append(getVerb());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>adverb</column-name><column-value><![CDATA[");
		sb.append(getAdverb());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = WordlibData.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			WordlibData.class
		};
	private long _wordlibId;
	private long _originalWordlibId;
	private boolean _setOriginalWordlibId;
	private long _groupId;
	private long _userId;
	private String _userUuid;
	private long _companyId;
	private long _imageId;
	private String _name;
	private String _person;
	private String _place;
	private String _adjective;
	private String _animal;
	private String _celebrity;
	private String _verb;
	private String _adverb;
	private long _columnBitmask;
	private WordlibData _escapedModel;
}